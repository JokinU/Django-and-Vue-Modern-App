# Generated by Django 5.2.3 on 2025-07-01 16:57

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import entrenoak.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('descripcion', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'categoria',
                'verbose_name_plural': '4. Categorias',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('logo', models.ImageField(upload_to='site/logo')),
            ],
            options={
                'verbose_name': 'site',
                'verbose_name_plural': '1. Site',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(default='users/avatars/default.jpg', upload_to='users/avatars/%Y/%m/%d/')),
                ('bio', models.TextField(max_length=500, null=True)),
                ('location', models.CharField(max_length=30, null=True)),
                ('website', models.CharField(max_length=100, null=True)),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': '2. Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Entrenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('distancia', models.FloatField()),
                ('desnivel', models.IntegerField()),
                ('localizacion', models.CharField(max_length=100)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('duracion', models.IntegerField()),
                ('recorrido', models.CharField(max_length=100)),
                ('temperatura_max', models.FloatField()),
                ('temperatura_min', models.FloatField()),
                ('alerta', models.IntegerField(blank=True, choices=[(1, 'SEGURO'), (2, 'CALOR'), (3, 'FRIO'), (4, 'MAL_TIEMPO'), (5, 'OTROS')], default=entrenoak.utils.TiposAlertas['SEGURO'], null=True)),
                ('estado', models.IntegerField(blank=True, choices=[(1, 'BORRADOR'), (2, 'PUBLICADO'), (3, 'OCULTO')], default=entrenoak.utils.TiposEstados['BORRADOR'], null=True)),
                ('slug', models.SlugField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='entrenoak.categoria')),
                ('likes', models.ManyToManyField(related_name='entrenamiento_like', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'entrenamiento',
                'verbose_name_plural': '3.Entrenamientos',
            },
        ),
        migrations.CreateModel(
            name='Corredor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50)),
                ('avatar', models.ImageField(default='runners/avatars/default.jpg', upload_to='runners/avatars/%Y/%m/%d/')),
                ('slug', models.SlugField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entrenamientos', models.ManyToManyField(to='entrenoak.entrenamiento')),
            ],
            options={
                'verbose_name': 'corredor',
                'verbose_name_plural': '5. Corredores',
            },
        ),
        migrations.CreateModel(
            name='Equipo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=50)),
                ('localidad', models.CharField(max_length=50)),
                ('descripcion', models.TextField()),
                ('avatar', models.ImageField(default='runners/avatars/default.jpg', upload_to='runners/avatars/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('administrador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('corredores', models.ManyToManyField(to='entrenoak.corredor')),
                ('entrenamientos', models.ManyToManyField(to='entrenoak.entrenamiento')),
            ],
            options={
                'verbose_name': 'equipo',
                'verbose_name_plural': '6. Equipos',
            },
        ),
    ]
